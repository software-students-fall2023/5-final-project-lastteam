name: WebAppCI/CD

on: [ pull_request , push]

jobs:
  #  test:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: Set up Python 3.10
  #        uses: actions/setup-python@v3
  #        with:
  #          python-version: "3.8"
  #      - name: Install dependencies
  #        run: |
  #          python -m pip install --upgrade pip
  #          pip install pytest pytest-flask pylint
  #          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #      - name: Test with pytest
  #        run: |
  #          cd web-app
  #          pytest appTest.py

  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Images using Docker Compose
        run: |
          docker-compose build
          docker-compose push
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          MONGO_DBNAME: ${{ secrets.MONGO_DBNAME }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          FLASK_APP: ${{ secrets.FLASK_APP }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8" ]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd 5-final-project-lastteam/
            docker container prune -f
            docker image prune -f
            docker volume prune -f
            docker network prune -f
            docker-compose pull
            docker-compose down
            docker-compose up -d

